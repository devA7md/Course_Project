#%RAML 1.0
baseUri: http://localhost:3000
title: Product APIs

/api:
  /products:
    # GET api/products/
    get:
      description: 'get all products'
      responses:
        200:
          body:
            application/json:
              example: {
                "products":"to be sent to client"
              }
        500:
          description: "should return 500 if something internally happened"
          body:
            application/json:
              example: {
                "error": "internal server error"
              }

    # POST api/products/
    post:
      description: 'post a new product'
      body:
        application/json:
          example: {
            "product": "data to be sent"
          }
      responses:
        401:
          description: "return 401 if the user is not logged in"
          body:
            application/json:
              example: {
                "message": "you have to login"
              }
        403:
          description: "return 403 if the user is not admin"
          body:
            application/json:
              example: {
                "message": "you do not have the permission to do this"
              }
        400:
          description: "return 400 if the product data are invalid"
          body:
            application/json:
              example: {
                "message": "invalid product date"
              }
        200:
          description: "return 200 if the product has been saved"
          body:
            application/json:
              example: {
                "message": "has been successfully saved"
              }
        500:
          description: "return 500 if something internally happened"
          body:
            application/json:
              example: {
                "error": "internal server error"
              }

    /update:
      # PUT api/products/update
      put:
        description: "update product data"
        body:
          application/json:
            example: {
              "data": "to update"
            }
        responses:
          401:
            description: "return 401 if the user is not logged in"
            body:
              application/json:
                example: {
                  "message": "you have to login"
                }
          403:
            description: "return 403 if the user is not admin"
            body:
              application/json:
                example: {
                  "message": "you do not have the permission to do this"
                }
          404:
            description: "return 404 if product not found"
            body:
              application/json:
                example: {
                  "message": "product not found"
                }
          200:
            description: "return 200 if the product id successfully updated"
            body:
              application/json:
                example: {
                  "message": "product has been updated successfully"
                }

    /delete:
      # DELETE api/products/delete
      delete:
        description: "delete a product"
        body:
          application/json:
            example: {
              "data": "for a product to delete"
            }
        responses:
          401:
            description: "return 401 if the user is not logged in"
            body:
              application/json:
                example: {
                  "message": "you have to login"
                }
          403:
            description: "return 403 if the user is not admin"
            body:
              application/json:
                example: {
                  "message": "you do not have the permission to do this"
                }
          404:
            description: "return 404 if the product not found"
            body:
              application/json:
                example: {
                  "message": "product not found"
                }
          200:
            description: "return 200 if the product is successfully deleted"
            body:
              application/json:
                example: {
                  "message": "product has been deleted successfully"
                }

    /{id}:
      # GET api/products/id
      get:
        description: "get one product"
        responses:
          404:
            description: "return 404 if the product is not found"
            body:
              application/json:
                example: {
                  "message": "product not found"
                }
          200:
            description: "return 200 and send the product"
            body:
              application/json:
                example: {
                  "product": "returned from db"
                }
